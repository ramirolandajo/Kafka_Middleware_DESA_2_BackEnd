version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:3
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:2.8.1
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CREATE_TOPICS=core-events:1:1
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9093:9092"
      - "29092:29092"
    depends_on:
      - zookeeper


  middleware:
    build:
      context: .
      dockerfile: Dockerfile
    image: kafka-middleware:latest
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_TOPIC_CORE_EVENTS=core-events
      - APP_KAFKA_ENABLED=false
      # Keycloak settings (ajusta si necesitas otro realm/urls)
      - KEYCLOAK_TOKEN_URL=http://host.docker.internal:8080/realms/ecommerce/protocol/openid-connect/token
      - KEYCLOAK_CLIENT_ID=ecommerce-app
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - SECURITY_JWKS_URI=http://host.docker.internal:8080/realms/ecommerce/protocol/openid-connect/certs
    ports:
      - "8090:8090"
    # no depende de kafka para poder arrancar aun si kafka no esta levantado

networks:
  default:
    name: kafka_mw_net

# Nota: Con esta configuración:
# - Dentro de docker-compose los servicios usan 'kafka:9092' para conectarse al broker.
# - Servicios fuera de Docker (ej. microservicio que corre en tu máquina) deben usar 'localhost:29092' como bootstrap-server.
# - Para que el contenedor `middleware` pueda resolver Keycloak que corre en el host, usamos host.docker.internal en las URLs.
# Para levantar: en Windows cmd.exe primero exporta la variable KEYCLOAK_CLIENT_SECRET y luego:
#   set KEYCLOAK_CLIENT_SECRET=8QHZ...
#   docker-compose up --build -d
# Luego la app (middleware) estará disponible en http://localhost:8090 y Kafka en localhost:29092 para clientes externos.
